<div id="map"></div>

<script>
  import L from "leaflet";

  import "leaflet/dist/leaflet.css";

  // vaguely all of australia
  const map = L.map("map").fitBounds([
    [-8.9668, 115.9417],
    [-43.901, 150.4128],
  ]);

  L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
    maxZoom: 19,
    attribution:
      '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
  }).addTo(map);

  const response = await fetch("/exchanges/exchanges.json");
  const exchanges = (await response.json()) as {
    attributes: {
      name: string;
      exchangeserviceareaid: string;
      address: string | null;
      suburb: string;
      state: string;
    };
    geometry: { x: number; y: number };
  }[];

  const icon = L.divIcon({
    className: "marker",
    iconSize: [16, 16],
  });
  for (const { attributes, geometry } of exchanges) {
    // TODO: can we do this without the awful html-in-a-string
    L.marker([geometry.y, geometry.x], { icon })
      .bindPopup(
        `
          <p><strong>${attributes.name} (${attributes.exchangeserviceareaid})</strong></p>
          <p>${attributes.address ? `${attributes.address}, ` : ``} ${attributes.suburb}, ${attributes.state}</p>
        `
      )
      .addTo(map);
  }
</script>

<style is:global>
  html,
  body,
  #map {
    width: 100%;
    height: 100%;
    margin: 0;
  }

  .marker {
    background: url("/exchanges/marker.svg") center no-repeat;
  }
</style>
